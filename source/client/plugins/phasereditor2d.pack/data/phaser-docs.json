{
  "Phaser.Loader.LoaderPlugin#spritesheet": "Adds a Sprite Sheet Image, or array of Sprite Sheet Images, to the current load queue.\n\nThe term 'Sprite Sheet' in Phaser means a fixed-size sheet. Where every frame in the sheet is the exact same size,\nand you reference those frames using numbers, not frame names. This is not the same thing as a Texture Atlas, where\nthe frames are packed in a way where they take up the least amount of space, and are referenced by their names,\nnot numbers. Some articles and software use the term 'Sprite Sheet' to mean Texture Atlas, so please be aware of\nwhat sort of file you're actually trying to load.\n\nYou can call this method from within your Scene's `preload`, along with any other files you wish to load:\n\n```javascript\nfunction preload ()\n{\n    this.load.spritesheet('bot', 'images/robot.png', { frameWidth: 32, frameHeight: 38 });\n}\n```\n\nThe file is **not** loaded right away. It is added to a queue ready to be loaded either when the loader starts,\nor if it's already running, when the next free load slot becomes available. This happens automatically if you\nare calling this from within the Scene's `preload` method, or a related callback. Because the file is queued\nit means you cannot use the file immediately after calling this method, but must wait for the file to complete.\nThe typical flow for a Phaser Scene is that you load assets in the Scene's `preload` method and then when the\nScene's `create` method is called you are guaranteed that all of those assets are ready for use and have been\nloaded.\n\nPhaser can load all common image types: png, jpg, gif and any other format the browser can natively handle.\nIf you try to load an animated gif only the first frame will be rendered. Browsers do not natively support playback\nof animated gifs to Canvas elements.\n\nThe key must be a unique String. It is used to add the file to the global Texture Manager upon a successful load.\nThe key should be unique both in terms of files being loaded and files already present in the Texture Manager.\nLoading a file using a key that is already taken will result in a warning. If you wish to replace an existing file\nthen remove it from the Texture Manager first, before loading a new one.\n\nInstead of passing arguments you can pass a configuration object, such as:\n\n```javascript\nthis.load.spritesheet({\n    key: 'bot',\n    url: 'images/robot.png',\n    frameConfig: {\n        frameWidth: 32,\n        frameHeight: 38,\n        startFrame: 0,\n        endFrame: 8\n    }\n});\n```\n\nSee the documentation for `Phaser.Types.Loader.FileTypes.SpriteSheetFileConfig` for more details.\n\nOnce the file has finished loading you can use it as a texture for a Game Object by referencing its key:\n\n```javascript\nthis.load.spritesheet('bot', 'images/robot.png', { frameWidth: 32, frameHeight: 38 });\n// and later in your game ...\nthis.add.image(x, y, 'bot', 0);\n```\n\nIf you have specified a prefix in the loader, via `Loader.setPrefix` then this value will be prepended to this files\nkey. For example, if the prefix was `PLAYER.` and the key was `Running` the final key will be `PLAYER.Running` and\nthis is what you would use to retrieve the image from the Texture Manager.\n\nThe URL can be relative or absolute. If the URL is relative the `Loader.baseURL` and `Loader.path` values will be prepended to it.\n\nIf the URL isn't specified the Loader will take the key and create a filename from that. For example if the key is \"alien\"\nand no URL is given then the Loader will set the URL to be \"alien.png\". It will always add `.png` as the extension, although\nthis can be overridden if using an object instead of method arguments. If you do not desire this action then provide a URL.\n\nPhaser also supports the automatic loading of associated normal maps. If you have a normal map to go with this image,\nthen you can specify it by providing an array as the `url` where the second element is the normal map:\n\n```javascript\nthis.load.spritesheet('logo', [ 'images/AtariLogo.png', 'images/AtariLogo-n.png' ], { frameWidth: 256, frameHeight: 80 });\n```\n\nOr, if you are using a config object use the `normalMap` property:\n\n```javascript\nthis.load.spritesheet({\n    key: 'logo',\n    url: 'images/AtariLogo.png',\n    normalMap: 'images/AtariLogo-n.png',\n    frameConfig: {\n        frameWidth: 256,\n        frameHeight: 80\n    }\n});\n```\n\nThe normal map file is subject to the same conditions as the image file with regard to the path, baseURL, CORs and XHR Settings.\nNormal maps are a WebGL only feature.\n\nNote: The ability to load this type of file will only be available if the Sprite Sheet File type has been built into Phaser.\nIt is available in the default build but can be excluded from custom builds.",
  "Phaser.Loader.LoaderPlugin#spritesheet@key": "The key to use for this file, or a file configuration object, or array of them."
}